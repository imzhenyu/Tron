namespace rDSN.Tron

struct ServiceMethod
{
	1: string Name;
	2: string InputTypeFullName;
	3: string OutputTypeFullName;
	4: string ParameterName;
}

struct ServiceAPI
{
	1: string Name;
	2: map<string, ServiceMethod> Methods;
}

enum ServiceSpecType
{
	Unknown,
	Composition,
	Common,
	Bond_3_0,
	Proto_Buffer_1_0,
	Thrift_0_9
}

struct ServiceSpec
{
	1: ServiceSpecType SType = Unknown;
	2: string MainSpecFile;
	3: vector<string> ReferencedSpecFiles;
	4: string Directory;
}

struct ServicePackage
{
    1: string Name;
	2: string Author;
	3: double Version;
	4: int64  PublishTime;
	5: string Description;
	6: string IconFileName;
	7: blob   PackageZip;
    8: ServiceSpec Spec;
	9: string MainExecutableName;
	10: string Arguments; // %port% is used for RPC port, which will be replaced by our scheduler at runtime
	11: string MainSpec; // for query
	12: blob   CompositionAssemblyContent; // for composition
}

struct ServiceDsptr
{
	1: string Name;
	2: string Author;
	3: double Version;
	4: string PublishTime;
	5: string Description;
	6: string IconFileName;
	7: string MainSpec;
}

struct RpcError
{
	1:  int32 Code;
}

struct RpcResponse<T> : RpcError
{
	2:  optional T Value;
}

struct Name
{
	1: string Value;
}

struct NameList
{
	1: vector<string> Names;
}


struct NodeAddress
{
	1: string Host;
	2: int32  Port;
}

struct ServiceInfo
{
	1: string Name;
	2: int32  InternalServiceSequenceId;
	3: int32  PartitionCount;	
	4: string ServicePackageName;
};

struct ServicePartitionInfo
{
    1: int32       InternalServiceSequenceId;
	2: int32       Index;
	3: uint64      GlobalPartitionId; // InternalServiceSequenceId ## Index
	4: string      Name;
	5: int32       ConfigurationVersion;
	6: int32       ServicePort;
	7: NodeAddress ManagerAddress;	
}

struct ServiceInfoEx : ServiceInfo
{
	1: vector<ServicePartitionInfo> Partitions;
}

struct AppServerInfo
{
    1: string                     Host;
	2: NodeAddress                Address;
	// temp fix from map<uint64, ...> to ensure converting to json can work in C#
	3: map<string, ServicePartitionInfo> Services;
	4: bool                       IsAlive;
}

enum ServicePartitionAction
{
	PUT,
	REMOVE
}
