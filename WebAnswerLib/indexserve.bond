
namespace rDSN.Tron.App

struct SpellCheckRequest
{
	1: string Word;
}

struct SpellCheckResultEntry
{
	1: string Word;
	2: double Score;
}

struct SpellCheckResponse
{
	1: list<SpellCheckResultEntry> Candidates;
}

service SpellChecker
{
	SpellCheckResponse Check(SpellCheckRequest word);
}


struct StringQuery
{
	1: string Query;
}

struct ErrorResult
{
	1: int32 ErrorCode;
}

struct Rank
{
	1: int32 Value;
}

struct AlterativeQueryList
{
    1: StringQuery RawQuery;
    2: list<StringQuery> Alterations;
}

struct AugmentedQuery
{
    1: int32 QueryId;
    2: StringQuery RawQuery;
    3: StringQuery AlteredQuery;
    4: int32 TopX;
}

struct DocId
{
    1: string URL;
}

struct DocPosition
{
    1: DocId DocIdentity;
    2: int32 Position;
}

struct PerDocStaticRank
{
    1: DocPosition Pos;
    2: int32 StaticRank;
}

struct StaticRankResult
{
    1: AugmentedQuery Query;
    2: list<PerDocStaticRank> Results;
}

struct PerDocRank
{
    1: DocId Id;
    2: Rank  Rank;
}
        
struct Caption
{
    1: DocId DocIdentifier;
    2: string Title;
    3: string CaptionHtml;
}

struct QueryResult
{
    1: StringQuery RawQuery;
    2: AugmentedQuery Query;
    3: vector<Caption> Results;
}

service IFEX
{
    StringQuery OnSearchQuery(StringQuery query);
}

service ALTA
{ 
}

service IsCache
{
    QueryResult Get(StringQuery query);
    ErrorResult Put(QueryResult result);
}

service QU
{
    AlterativeQueryList OnQueryUnderstanding(StringQuery query);
}

service QU2
{
    AugmentedQuery OnQueryAnnotation(StringQuery query);
}

service TLA
{ 
}

service WebCache
{
    QueryResult Get(AugmentedQuery query);
    ErrorResult Put(QueryResult result);
}

service SaaS
{
    StaticRankResult OnL1Selection(AugmentedQuery query);
}

service RaaS
{
    Rank OnL2Rank(PerDocStaticRank pos);
}

service CDG
{
    Caption Get(DocId id);
    ErrorResult Put(Caption caption);
}
