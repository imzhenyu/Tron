//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Tool     : bondc, Version=3.0.1, Build=bond-git.retail.not
//     Template : Microsoft.Bond.Rules.dll#Rules_Bond_CSharp.tt
//     File     : AppServer_services.cs
//
//     Changes to this file may cause incorrect behavior and will be lost when
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using global::BondTransport;
using global::BondNetlibTransport;
using global::Microsoft.Bond;
using global::System;
using global::System.Collections.Generic;

namespace rDSN
{
namespace Tron
{

///<summary>
/// AppServer
///</summary>
[System.CodeDom.Compiler.GeneratedCode("bondc.exe", null)]
public abstract class AppServer_Service : BondTransport.BondService
{
    //
    // Constructors
    //
    public AppServer_Service() : this("Microsoft::Tron.AppServer")
    {
    }

    public AppServer_Service(string serviceName) : base(serviceName)
    {
        Register("SuggestServicePartition", new BondTransport.FunctionHelper(SuggestServicePartitionHelper));

    }

    public abstract void SuggestServicePartition(Request<global::rDSN.Tron.ServicePartitionSuggestRequest, Microsoft.Bond.Void> call);

    public virtual void SuggestServicePartitionHelper(TransportAsyncResult msg, IBondTransportServer serv)
    {
        Request<global::rDSN.Tron.ServicePartitionSuggestRequest, Microsoft.Bond.Void> request = GenerateRequest<global::rDSN.Tron.ServicePartitionSuggestRequest, Microsoft.Bond.Void>(msg, serv);
        if (request != null)
        {
            SuggestServicePartition(request);
        }
    }

}    // ~ AppServer_Service
} // namespace Tron
} // namespace rDSN
